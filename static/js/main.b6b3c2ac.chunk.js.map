{"version":3,"sources":["ui/atom/HeadingTaskCount.tsx","service/DataStoragePolicyService.ts","service/TaskStorage.ts","ui/hooks/UseStateTask.ts","ui/atom/AddButton.tsx","ui/atom/TextField.tsx","ui/molecule/AddInputForm.tsx","ui/molecule/TopMenu.tsx","ui/molecule/FilterButton.tsx","ui/organism/FilterSelector.tsx","ui/molecule/EditView.tsx","ui/atom/DeleteAction.tsx","ui/atom/EditAction.tsx","ui/atom/TaskCheck.tsx","ui/molecule/TaskView.tsx","ui/organism/TaskWidget.tsx","ui/organism/TasksList.tsx","ui/Provider.tsx","ui/atom/Glassbackdrop.tsx","ui/organism/VerticalMenuList.tsx","ui/template/MainTemplate.tsx","ui/page/App.tsx","reportWebVitals.ts","index.tsx"],"names":["HeadingStyle","styled","h5","HeadingTaskCount","children","getDataService","localStorage","MAIN_STORAGE_KEY","INITIAL_DATA","id","name","completed","useStateTask","storage","useState","getItem","data","JSON","stringify","setItem","_setInitialTaks","value","setValue","useEffect","parse","newValue","AddButton","props","Fab","aria-label","TextField","variant","fullWidth","AddForm","form","AddButtonStyle","AddInputForm","addTask","theme","useTheme","setName","onSubmit","e","preventDefault","type","autoComplete","onChange","target","style","margin","marginLeft","right","backgroundColor","action","add","TopMenuBar","AppBar","position","TopMenu","title","Toolbar","Typography","FilterButton","isPressed","setFilter","Chip","label","onClick","palette","primary","dark","FilterSelectorList","div","FilterButtonStyle","span","FilterSelector","filters","filterSelected","filterSelectedCallback","map","filter","InputSection","EditView","React","forwardRef","ref","editTask","onValueChange","onSubmitChange","FormControl","width","padding","InputLabel","fontSize","Input","defaultValue","event","IconButton","color","size","cancel","accept","displayName","DeleteAction","stopPropagation","EditAction","CheckboxStyled","rest","Checkbox","TaskCheck","checked","FormControlLabel","control","disableRipple","pointerEvents","TaskViewStyled","withTheme","light","TaskView","toggleTaskCompleted","deleteTask","TaskWidget","editFieldRef","useRef","editButtonRef","isEditing","setEditing","newName","setNewName","wasEditing","current","usePrevious","isEditingCallback","focus","FILTER_MAP","All","Active","task","Completed","FILTER_NAMES","Object","keys","TasksListElementStyle","ul","TasksList","tasks","selectedFilter","console","log","aria-labelledby","createMuiTheme","main","secondary","typography","Provider","ThemeProvider","Glassbackdrop","Background","VerticalMenuList","CentralSection","MainTemplate","bottom","href","App","setTasks","headingText","length","newTask","uuidv4","updatedTasks","remainingTasks","editedTaskList","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b6b3c2ac.chunk.js","sourcesContent":["import React, { ReactElement } from \"react\";\nimport styled from \"styled-components\";\n\nconst HeadingStyle = styled.h5`\n  margin: 0;\n`;\n\nconst HeadingTaskCount: React.FC = ({ children }): ReactElement => {\n  return <HeadingStyle>{children}</HeadingStyle>;\n};\n\nexport default HeadingTaskCount;\n","type DataStorageService = Storage;\n\n// TODO should return a polymorph class which abstract the service it calls\n// TODO shouldn't use localstorage to store object data\nfunction getDataService(): DataStorageService {\n  //   if (\n  //     typeof window.localStorage !== \"undefined\" &&\n  //     window.localStorage != null\n  //   ) {\n  return localStorage;\n  //   }\n}\n\nexport default getDataService;\n","export const MAIN_STORAGE_KEY = \"yatatasks\";\n\ninterface TaskStorage {\n  id: string;\n  name: string;\n  completed: boolean;\n}\n\nexport default TaskStorage;\n","import { useEffect, useState } from \"react\";\nimport getDataService from \"service/DataStoragePolicyService\";\nimport TaskStorage, { MAIN_STORAGE_KEY } from \"service/TaskStorage\";\nimport { Task } from \"ui/organism/TasksList\";\n\nconst INITIAL_DATA: TaskStorage[] = [\n  {\n    id: \"todo-0\",\n    name: \"Eat\",\n    completed: true,\n  },\n];\n// TODO we shouldn't know how the data is converted from Task to TaskStorage, which in the case is in a string format\nfunction useStateTask(): [Task[], (value: Task[]) => void] {\n  const storage = getDataService();\n\n  const [value, setValue] = useState(\n    storage.getItem(MAIN_STORAGE_KEY) || _setInitialTaks(storage)\n  );\n\n  useEffect(() => {\n    storage.setItem(MAIN_STORAGE_KEY, value);\n  }, [value, storage]);\n\n  return [\n    JSON.parse(value),\n    (newValue: Task[]) => setValue(JSON.stringify(newValue)),\n  ];\n}\n\n// TODO should be in a service class\n// TODO storage should have an interface which shoul be abstracted from the storage type\nfunction _setInitialTaks(storage: Storage): string {\n  const data = JSON.stringify(INITIAL_DATA);\n  storage.setItem(MAIN_STORAGE_KEY, JSON.stringify(INITIAL_DATA));\n  return data;\n}\n\nexport default useStateTask;\n","import Fab from \"@material-ui/core/Fab\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport AddIcon from \"@material-ui/icons/Add\";\n\nconst AddButton = styled(({ ...props }) => (\n  <Fab aria-label=\"add\" {...props}>\n    <AddIcon />\n  </Fab>\n))``;\n\nexport default AddButton;\n","import React from \"react\";\nimport { TextField as MaterialUITextField } from \"@material-ui/core\";\nimport styled from \"styled-components\";\n\nconst TextField = styled(({ ...props }) => (\n  <MaterialUITextField variant=\"outlined\" fullWidth {...props} />\n))`\n  && {\n    margin-right: 3rem;\n  }\n`;\n\nexport default TextField;\n","import { useTheme } from \"@material-ui/styles\";\nimport React, { ChangeEvent, ReactElement, useState } from \"react\";\nimport styled from \"styled-components\";\nimport AddButton from \"ui/atom/AddButton\";\nimport TextField from \"ui/atom/TextField\";\nimport { MyTheme } from \"ui/Provider\";\n\ninterface FormProps {\n  addTask: (e: string) => void;\n}\n\nconst AddForm = styled.form`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst AddButtonStyle = styled(AddButton)`\n  && {\n    transform: scale(0.75);\n  }\n`;\n\nconst AddInputForm = ({ addTask }: FormProps): ReactElement => {\n  const theme = useTheme<MyTheme>();\n  const [name, setName] = useState(\"\");\n\n  const handleSubmit = (e: React.FormEvent): void => {\n    e.preventDefault();\n    addTask(name);\n    setName(\"\");\n  };\n\n  const handleChange = (newValue: ChangeEvent<HTMLInputElement>) => {\n    setName(newValue.target.value);\n  };\n\n  return (\n    <AddForm onSubmit={handleSubmit}>\n      <TextField\n        type=\"text\"\n        id=\"new-todo-input\"\n        name=\"text\"\n        autoComplete=\"off\"\n        value={name}\n        onChange={handleChange}\n        style={{ margin: \"auto\", marginLeft: \"1rem\" }}\n      />\n      <div style={{ right: \"1rem\" }}>\n        <AddButtonStyle\n          type=\"submit\"\n          style={{ backgroundColor: theme.action.add }}\n        />\n      </div>\n    </AddForm>\n  );\n};\n\nexport default AddInputForm;\n","import { AppBar, IconButton, Toolbar, Typography } from \"@material-ui/core\";\nimport React, { ReactElement } from \"react\";\nimport MenuRoundedIcon from \"@material-ui/icons/MenuRounded\";\nimport styled from \"styled-components\";\n\ninterface TopMenuProps {\n  title: string;\n}\n\nconst TopMenuBar = styled(({ ...props }) => (\n  <AppBar position=\"static\" {...props} />\n))`\n  border-radius: 10px;\n  margin-bottom: 1rem;\n`;\n\nconst TopMenu = ({ title }: TopMenuProps): ReactElement => {\n  return (\n    <TopMenuBar>\n      <Toolbar variant=\"dense\">\n        <Typography variant=\"h5\">{title}</Typography>\n      </Toolbar>\n    </TopMenuBar>\n  );\n};\n\nexport default TopMenu;\n","import { Chip, useTheme } from \"@material-ui/core\";\nimport React, { ReactElement } from \"react\";\nimport { MyTheme } from \"ui/Provider\";\n\ninterface FilterButtonProps {\n  name: string;\n  isPressed: boolean;\n  setFilter: (value: string) => void;\n}\n\nconst FilterButton = ({\n  name,\n  isPressed,\n  setFilter,\n}: FilterButtonProps): ReactElement => {\n  const theme = useTheme<MyTheme>();\n  return (\n    <Chip\n      label={name}\n      onClick={() => setFilter(name)}\n      style={{\n        backgroundColor: isPressed ? theme.palette.primary.dark : \"#E0E0E0\",\n      }}\n    />\n  );\n};\n\nexport default FilterButton;\n","import React, { ReactElement } from \"react\";\nimport styled from \"styled-components\";\nimport FilterButton from \"ui/molecule/FilterButton\";\n\ninterface FilterSelectorProps {\n  filters: string[];\n  filterSelected: string;\n  filterSelectedCallback: (filter: string) => void;\n}\n\nconst FilterSelectorList = styled.div`\n  display: flex;\n  margin: 1rem 0;\n`;\n\nconst FilterButtonStyle = styled.span`\n  margin-right: 1rem;\n`;\n\nconst FilterSelector = ({\n  filters,\n  filterSelected,\n  filterSelectedCallback,\n}: FilterSelectorProps): ReactElement => {\n  return (\n    <FilterSelectorList>\n      {filters.map((filter) => (\n        <FilterButtonStyle key={filter}>\n          <FilterButton\n            name={filter}\n            isPressed={filter === filterSelected}\n            setFilter={filterSelectedCallback}\n          />\n        </FilterButtonStyle>\n      ))}\n    </FilterSelectorList>\n  );\n};\n\nexport default FilterSelector;\n","import {\n  FormControl,\n  IconButton,\n  Input,\n  InputLabel,\n  useTheme,\n} from \"@material-ui/core\";\nimport CancelIcon from \"@material-ui/icons/Cancel\";\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\nimport React, { ReactElement } from \"react\";\nimport styled from \"styled-components\";\nimport { MyTheme } from \"ui/Provider\";\n\ninterface EditingTemplateProps {\n  name: string;\n  id: string;\n  editTask: (isEditing: boolean) => void;\n  onValueChange: (value: string) => void;\n  onSubmitChange: (event: React.FormEvent) => void;\n  ref: React.MutableRefObject<HTMLInputElement | null>;\n}\n\nconst InputSection = styled.div`\n  display: flex;\n`;\n\nconst EditView = React.forwardRef<HTMLInputElement, EditingTemplateProps>(\n  (\n    { name, id, editTask, onValueChange, onSubmitChange },\n    ref\n  ): ReactElement => {\n    const theme = useTheme<MyTheme>();\n    return (\n      <FormControl style={{ width: \"100%\", padding: \"0 1rem\" }}>\n        <InputLabel style={{ fontSize: \"2rem\", position: \"inherit\" }}>\n          {\"New name for \"}\n          {name}\n        </InputLabel>\n        <InputSection>\n          <Input\n            id={id}\n            defaultValue={name}\n            type=\"text\"\n            onChange={(event) => onValueChange(event.target.value)}\n            ref={ref}\n            style={{ width: \"100%\" }}\n          />\n          <IconButton\n            color=\"secondary\"\n            aria-label=\"cancel\"\n            size=\"small\"\n            onClick={() => editTask(false)}\n          >\n            <CancelIcon\n              style={{ fontSize: \"3rem\", color: theme.action.cancel }}\n            />\n          </IconButton>\n          <IconButton\n            color=\"primary\"\n            aria-label=\"accept\"\n            size=\"small\"\n            type=\"submit\"\n            onClick={onSubmitChange}\n          >\n            <CheckCircleIcon\n              style={{ fontSize: \"3rem\", color: theme.action.accept }}\n            />\n          </IconButton>\n        </InputSection>\n      </FormControl>\n    );\n  }\n);\n\nEditView.displayName = \"EditView\";\n\nexport default EditView;\n","import React, { ReactElement, SyntheticEvent } from \"react\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { CSSProperties } from \"@material-ui/styles\";\n\ninterface DeleteActionProps {\n  style?: CSSProperties;\n  onClick: () => void;\n}\n\nconst DeleteAction = ({ style, onClick }: DeleteActionProps): ReactElement => {\n  const deleteOnClick = (e: SyntheticEvent) => {\n    e.stopPropagation();\n    onClick();\n  };\n  return <DeleteIcon style={style} onClick={deleteOnClick} />;\n};\n\nexport default DeleteAction;\n","import React, { ReactElement, SyntheticEvent } from \"react\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport { CSSProperties } from \"@material-ui/styles\";\n\ninterface EditActionProps {\n  style?: CSSProperties;\n  onClick: () => void;\n}\n\nconst EditAction = ({ style, onClick }: EditActionProps): ReactElement => {\n  const editOnClick = (e: SyntheticEvent) => {\n    e.stopPropagation();\n    onClick();\n  };\n  return <EditIcon style={style} onClick={editOnClick} />;\n};\n\nexport default EditAction;\n","import { Checkbox, FormControlLabel } from \"@material-ui/core\";\nimport React, { ReactElement } from \"react\";\nimport styled from \"styled-components\";\n\ninterface CheckboxProps {\n  checked: boolean;\n  label: string;\n}\n\nconst CheckboxStyled = styled(({ ...rest }) => <Checkbox {...rest} />)`\n  &.MuiIconButton-colorSecondary:hover {\n    background-color: inherit;\n  }\n  &.MuiCheckbox-colorSecondary.Mui-checked:hover {\n    background-color: inherit;\n  }\n`;\n\nconst TaskCheck = ({ checked, label }: CheckboxProps): ReactElement => {\n  return (\n    <FormControlLabel\n      control={<CheckboxStyled checked={checked} name={label} disableRipple />}\n      label={label}\n      style={{ pointerEvents: \"none\" }}\n    />\n  );\n};\n\nexport default TaskCheck;\n","import { Fab, useTheme, withTheme } from \"@material-ui/core\";\nimport React, { ReactElement } from \"react\";\nimport styled from \"styled-components\";\nimport DeleteAction from \"ui/atom/DeleteAction\";\nimport EditAction from \"ui/atom/EditAction\";\nimport TaskCheck from \"ui/atom/TaskCheck\";\nimport { MyTheme } from \"ui/Provider\";\n\ninterface ViewPageProps {\n  id: string;\n  name: string;\n  completed?: boolean;\n  toggleTaskCompleted: (id: string) => void;\n  deleteTask: (id: string) => void;\n  editTask: (isEditing: boolean) => void;\n}\n\nconst TaskViewStyled = withTheme(styled(Fab)`\n  && {\n    background-color: ${(props) => props.theme.palette.primary.light};\n    width: 100%;\n    display: flex;\n    justify-content: space-between;\n  }\n`);\n\nconst TaskView = ({\n  name,\n  id,\n  completed = false,\n  toggleTaskCompleted,\n  deleteTask,\n  editTask,\n}: ViewPageProps): ReactElement => {\n  return (\n    <TaskViewStyled variant=\"extended\" onClick={() => toggleTaskCompleted(id)}>\n      <TaskCheck label={name} checked={completed} />\n      <span>\n        <EditAction onClick={() => editTask(true)} />\n        <DeleteAction onClick={() => deleteTask(id)} />\n      </span>\n    </TaskViewStyled>\n  );\n};\n\nTaskView.displayName = \"TaskView\";\n\nexport default TaskView;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport EditView from \"ui/molecule/EditView\";\n\nimport TaskView from \"ui/molecule/TaskView\";\n\nexport interface TodoProps {\n  id: string;\n  name: string;\n  completed?: boolean;\n  toggleTaskCompleted: (id: string) => void;\n  deleteTask: (id: string) => void;\n  editTask: (id: string, newName: string) => void;\n}\n\nconst TaskWidget: React.FC<TodoProps> = (props) => {\n  const { name, id, editTask } = props;\n\n  const editFieldRef = useRef<HTMLInputElement>(null);\n  const editButtonRef = useRef<HTMLButtonElement>(null);\n\n  const [isEditing, setEditing] = useState<boolean>();\n  const [newName, setNewName] = useState(name);\n\n  const usePrevious = (value: boolean | undefined) => {\n    const ref = useRef<boolean>();\n    useEffect(() => {\n      ref.current = value;\n    });\n    return ref.current;\n  };\n\n  const wasEditing = usePrevious(isEditing);\n\n  const isEditingCallback = (value: boolean) => setEditing(value);\n\n  const handleChange = (value: string) => setNewName(value);\n\n  const onSubmitCallback = (event: React.FormEvent) => {\n    event.preventDefault();\n    editTask(id, newName);\n    setNewName(\"\");\n    setEditing(false);\n  };\n\n  useEffect(() => {\n    if (isEditing && editFieldRef.current && !wasEditing) {\n      editFieldRef.current.focus();\n    } else if (editButtonRef.current && !isEditing && wasEditing) {\n      editButtonRef.current.focus();\n    }\n  }, [isEditing, wasEditing]);\n\n  return (\n    <li>\n      {isEditing ? (\n        <EditView\n          name={name}\n          id={id}\n          editTask={isEditingCallback}\n          onValueChange={handleChange}\n          onSubmitChange={onSubmitCallback}\n          ref={editFieldRef}\n        />\n      ) : (\n        <TaskView {...props} editTask={isEditingCallback} />\n      )}\n    </li>\n  );\n};\n\nexport default TaskWidget;\n","import React, { ReactElement } from \"react\";\nimport styled from \"styled-components\";\nimport TaskWidget from \"ui/organism/TaskWidget\";\n\nconst FILTER_MAP: { [key: string]: (e: Task) => void } = {\n  All: () => true,\n  Active: (task: Task) => !task.completed,\n  Completed: (task: Task) => task.completed,\n};\n\nexport const FILTER_NAMES = Object.keys(FILTER_MAP);\n\nexport interface Task {\n  id: string;\n  name: string;\n  completed: boolean;\n}\n\ninterface TasksListProps {\n  tasks: Task[];\n  selectedFilter: string;\n  toggleTaskCompleted: (id: string) => void;\n  deleteTask: (id: string) => void;\n  editTask: (id: string, newName: string) => void;\n}\n\nconst TasksListElementStyle = styled.ul`\n  margin: 0;\n\n  li {\n    margin: 1.3rem 0;\n  }\n`;\n\nconst TasksList = ({\n  tasks,\n  selectedFilter,\n  toggleTaskCompleted,\n  deleteTask,\n  editTask,\n}: TasksListProps): ReactElement => {\n  console.log(\"object :>> \", tasks);\n  return (\n    <TasksListElementStyle aria-labelledby=\"list-heading\">\n      {tasks.filter(FILTER_MAP[selectedFilter]).map((task) => (\n        <TaskWidget\n          key={task.id}\n          id={task.id}\n          name={task.name}\n          completed={task.completed}\n          toggleTaskCompleted={toggleTaskCompleted}\n          deleteTask={deleteTask}\n          editTask={editTask}\n        />\n      ))}\n    </TasksListElementStyle>\n  );\n};\n\nexport default TasksList;\n","import { createMuiTheme } from \"@material-ui/core/styles\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport React, { ReactElement } from \"react\";\n\ndeclare module \"@material-ui/core/styles/createMuiTheme\" {\n  export interface Theme {\n    action: {\n      add: string;\n      cancel: string;\n      accept: string;\n    };\n  }\n\n  interface ThemeOptions {\n    action?: {\n      add?: string;\n      cancel?: string;\n      accept?: string;\n    };\n  }\n}\n\nexport type MyTheme = ReturnType<typeof createMuiTheme>;\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      dark: \"#c57583\",\n      main: \"#6565dd\",\n      light: \"azure\",\n    },\n    secondary: {\n      main: \"#ec8f9f\",\n    },\n  },\n  typography: {\n    fontSize: 20,\n  },\n  action: {\n    add: \"#ec8f9f\",\n    cancel: \"#fa0707\",\n    accept: \"#01a501\",\n  },\n});\n\nconst Provider: React.FC = ({ children }): ReactElement => {\n  return <ThemeProvider<MyTheme> theme={theme}>{children}</ThemeProvider>;\n};\n\nexport default Provider;\n","import styled from \"styled-components\";\n\nconst Glassbackdrop = styled.div`\n  border-radius: 15px;\n  background-color: rgba(255, 255, 255, 0.5);\n  backdrop-filter: blur(5px);\n  padding: 1rem;\n`;\n\nexport default Glassbackdrop;\n","import React, { ReactElement } from \"react\";\nimport styled from \"styled-components\";\n\nimport Glassbackdrop from \"ui/atom/Glassbackdrop\";\n\nconst Background = styled(Glassbackdrop)`\n  display: flex;\n  flex-direction: column;\n  overflow: auto;\n`;\n\nconst VerticalMenuList: React.FC = ({ children }): ReactElement => {\n  return <Background>{children}</Background>;\n};\n\nexport default VerticalMenuList;\n","import React, { ReactElement } from \"react\";\nimport styled from \"styled-components\";\nimport VerticalMenuList from \"ui/organism/VerticalMenuList\";\n\nconst Background = styled.div`\n  background-image: url(\"images/christopher-czermak-ulG2K7id26s-unsplash.jpeg\");\n  background-repeat: no-repeat;\n  background-color: #cccccc;\n  position: absolute;\n  background-size: cover;\n  top: 0;\n  left: 0;\n  height: 100vh;\n  width: 100vw;\n  overflow: hidden;\n`;\n\nconst CentralSection = styled.div`\n  position: absolute;\n  width: 40rem;\n  margin: 0;\n  top: 10%;\n  left: 50%;\n  transform: translate(-50%, 0%);\n  max-height: 90%;\n  overflow-y: overlay;\n`;\n\nconst MainTemplate: React.FC = ({ children }): ReactElement => {\n  return (\n    <Background>\n      <CentralSection>\n        <VerticalMenuList>{children}</VerticalMenuList>\n      </CentralSection>\n      <div style={{ position: \"absolute\", bottom: \"5px\", color: \"orange\" }}>\n        {\"Photo by \"}\n        <a\n          href=\"https://unsplash.com/@czermak_photography?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText\"\n          style={{ color: \"white\" }}\n        >\n          Christopher Czermak\n        </a>\n        {\" on \"}\n        <a\n          href=\"https://unsplash.com/backgrounds?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText\"\n          style={{ color: \"white\" }}\n        >\n          Unsplash\n        </a>\n      </div>\n    </Background>\n  );\n};\n\nexport default MainTemplate;\n","import React, { useState } from \"react\";\nimport HeadingTaskCount from \"ui/atom/HeadingTaskCount\";\nimport useStateTask from \"ui/hooks/UseStateTask\";\nimport AddInputForm from \"ui/molecule/AddInputForm\";\nimport TopMenu from \"ui/molecule/TopMenu\";\nimport FilterSelector from \"ui/organism/FilterSelector\";\nimport TasksList, { FILTER_NAMES, Task } from \"ui/organism/TasksList\";\nimport Provider from \"ui/Provider\";\nimport MainTemplate from \"ui/template/MainTemplate\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nconst App: React.FC = () => {\n  const [tasks, setTasks] = useStateTask();\n  const [filter, setFilter] = useState(\"All\");\n\n  const addTask = (name: string) => {\n    const newTask = { id: uuidv4(), name, completed: false };\n    setTasks([...tasks, newTask]);\n  };\n\n  const toggleTaskCompleted = (id: string) => {\n    const updatedTasks = tasks.map((task) => {\n      if (id === task.id) {\n        return { ...task, completed: !task.completed };\n      }\n      return task;\n    });\n    setTasks(updatedTasks);\n  };\n\n  const deleteTask = (id: string) => {\n    const remainingTasks = tasks.filter((task) => id !== task.id);\n    setTasks(remainingTasks);\n  };\n\n  const headingText = `${tasks.length} tasks remaining`;\n\n  const editTask = (id: string, newName: string) => {\n    const editedTaskList = tasks.map((task) => {\n      if (id === task.id) {\n        return { ...task, name: newName };\n      }\n      return task;\n    });\n    setTasks(editedTaskList);\n  };\n\n  return (\n    <Provider>\n      <MainTemplate>\n        <TopMenu title=\"Yet Another Todo App\" />\n        <AddInputForm addTask={addTask} />\n        <FilterSelector\n          filters={FILTER_NAMES}\n          filterSelected={filter}\n          filterSelectedCallback={setFilter}\n        />\n        <HeadingTaskCount>{headingText}</HeadingTaskCount>\n        <TasksList\n          tasks={tasks}\n          selectedFilter={filter}\n          toggleTaskCompleted={toggleTaskCompleted}\n          deleteTask={deleteTask}\n          editTask={editTask}\n        />\n      </MainTemplate>\n    </Provider>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Task } from \"ui/organism/TasksList\";\nimport App from \"ui/page/App\";\nimport \"./index.css\";\n\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}